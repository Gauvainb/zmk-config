/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define SYM 1
#define FUN 2

&lt {
    tapping-term-ms = <180>;
    flavor = "tap-preferred";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE    &kp N1  &kp N2    &kp NUMBER_3  &kp N4     &kp N5                         &kp N6        &kp N7        &kp N8      &kp N9         &kp N0         &kp MINUS
&kp TAB       &kp Q   &kp W     &kp E         &kp R      &kp T                          &kp Y         &kp U         &kp I       &kp O          &kp P          &kp LEFT_BRACKET
&kp CAPSLOCK  &kp A   &kp S     &kp D         &kp F      &kp G      &none    &none      &kp H         &kp J         &kp K       &kp L          &kp SEMICOLON  &kp SQT
&kp LSHFT     &kp Z   &kp X     &kp C         &kp V      &kp B      &none    &none      &kp N         &kp M         &kp COMMA   &kp DOT        &kp SLASH      &kp RSHFT
&kp LCTRL     &mo 1   &kp LALT  &kp LEFT_GUI  &kp SPACE  &kp SPACE  &kp ESC  &kp ENTER  &kp KP_ENTER  &kp KP_ENTER  &kp DELETE  &kp BACKSPACE  &mo 2          &kp HASH
            >;
        };

        symbol_layer {
            bindings = <
&bt BT_CLR  &bt BT_NXT  &trans    &trans    &trans    &trans                     &trans     &trans     &trans    &trans    &trans     &ext_power EP_TOG
&kp F1      &kp F2      &kp F3    &kp F4    &kp F5    &kp F6                     &kp N6     &kp N7     &kp N8    &kp N9    &kp DQT    &kp UNDER
&kp F7      &kp F8      &kp F9    &kp F10   &kp F11   &kp F12    &trans  &trans  &kp PIPE   &kp EQUAL  &kp LBRC  &kp RBRC  &kp N0     &kp GRAVE
&kp TILDE   &kp AT      &kp LBKT  &kp RBKT  &kp PLUS  &kp PRCNT  &trans  &trans  &kp CARET  &kp ASTRK  &kp LT    &kp GT    &kp QMARK  &kp BSLH
&trans      &trans      &trans    &trans    &trans    &trans     &trans  &trans  &kp SPACE  &trans     &trans    &trans    &mo 3      &kp NUBS
            >;
        };

        function_layer {
            bindings = <
&trans  &trans  &trans   &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT                            &kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOLUME_UP  &trans        &trans           &trans
&trans  &kp F1  &kp F2   &kp F3          &kp F4            &kp PSCRN                             &kp PAGE_UP        &kp HOME    &kp UP_ARROW     &kp END       &kp END          &trans
&trans  &kp F5  &kp F6   &kp F7          &kp F8            &kp INS     &trans        &trans      &kp PAGE_DOWN      &kp LEFT    &kp DOWN         &kp RIGHT     &kp RIGHT        &trans
&trans  &kp F9  &kp F10  &kp F11         &kp F12           &kp K_APP   &bt BT_PRV    &bt BT_NXT  &kp KP_NUM         &kp K_MUTE  &kp K_VOL_DN     &kp K_VOL_UP  &kp PAUSE_BREAK  &trans
&trans  &mo 3   &trans   &trans          &trans            &kp TAB     &bt BT_SEL 0  &bt BT_CLR  &trans             &trans      &trans           &trans        &trans           &kp EQUAL
            >;
        };

        layer_3 {
            bindings = <
&kp C_POWER  &trans  &trans  &trans  &trans  &trans                  &kp K_SLEEP  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans                  &trans       &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
